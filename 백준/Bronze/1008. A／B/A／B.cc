#include <iostream>
using namespace std;

int main() {
	double a, b;
	cin >> a >> b;
	cout << fixed;		/* 선행 조건 : 소수점 이하의 자릿수만 조절 가능 */
	cout.precision(10);	/* 함수 : 괄호 안의 수 만큼 자릿수 추가로 출력 */
	cout << a / b;
	return 0;
}
/*	■ 설명 ■
	[cout]를 사용하여 실수를 출력 시엔 (정수 부분 + 소수점 부분)을 합해서 6자리를 출력하는 데, 사용자가 임의로 출력 자릿수를 늘리고자 한다면 
	[cout.precision();] 를 입력 후 괄호 안에 원하는 숫자 만큼 입력시에 자릿수를 줄이거나 늘리기가 가능하지만, 
	자리를 차지 하는 우선 순위가 (정수 부분)이 우선시 되기 때문에 (소수점 부분)만 늘리고 싶다면 반드시
	[cout << fixed;] 선행 입력 후 진행할 것
*/
/*====================================================================================================================================================*/
/*	■ C언어 ■
						// '비주얼 스튜디오' 기준으론 [scanf] 함수를 사용 시 보안 상의 문제로 [scanf_s] 함수로 대체하는 데,
	#define _CRT_SECURE_NO_WARNINGS		// 이 함수는 '비주얼 스튜디오'에만 존재하기 때문에, 만약 다른 프로그램으로 [scanf_s] 함수를 사용 시
	#include <stdio.h>			// 작동되지 않는 문제를 겪을 수 있으므로, 훗날 작업 환경의 여러 방면을 고려하여 코드 최상단에 
						// 선행 처리기인 [#define _CRT_SECURE_NO_WARNINGS] 를 입력하여 [scanf] 함수 사용 시 보안 경고를 무시하자
	int main() {
		int a, b;
		scanf("%d %d", &a, &b);
		printf("%.10f", (double)a / b);
		return 0;
	}
*/
/*	■ 설명 ■
	[printf] 출력 함수의 서식 문자인 [%f] 의 '%' 와 'f' 사이에 ' . ' 점을 넣은 후에
	점 위치 앞에 값을 넣으면 [%5.f] (정수 부분)을 5자리 출력 되도록 하고,
	점 위치 뒤에 값을 넣으면 [%.5f] (소수점 부분)을 5자리 출력 되게 한다.
*/
