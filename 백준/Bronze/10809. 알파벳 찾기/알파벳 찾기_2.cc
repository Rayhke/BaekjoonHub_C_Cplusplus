#include <iostream>
using namespace std;

int main() {
	int a[26] = {}, b; string c;
	cin >> c;
	for (int n = 0; n < 26; n++) { a[n] = -1; }	// 이렇게 설계한 이유는 - ◆ 해설 1 ◆ 참고
	for (int n = 0; c[n] != '\0'; n++) {
		b = c[n];
		if (a[b - 97] != -1) { continue; }        // 이렇게 설계한 이유는 - ◆ 해설 2 ◆ 참고
		else { a[b - 97] = n; }
	}
	for (int n = 0; n < 26; n++) { cout << a[n] << " "; }
	return 0;
}
/* ■ 설명 ■	 // 백준 - 브론즈 2 (10809번)
(a ~ z) 까지, 총 26개의 문자가 있다.			// 그래서 int 배열 크기를 [26]로 한 것

알파벳을 [int] 상수로 읽어 들이면,				// ('a' = 97)
아스키 코드 10진수 값을 출력하는 것을
응용 하여서, 상수 배열 [int a]의 자릿값으로 추적한다.
================================================================================
◆ 해설 1 ◆
처음 입력된 문자열에 존재하지 않았던 알파벳을 
마지막 출력에 '-1' 를 하기 위해, [string c] 문자열 첫 번째 자리를 기록해두고,
예외로 두어 '-1' 을 담기 보다는

[int a[26]] 에 미리 모든 배열 값을 '-1'로 변환해두면
입력된 문자열 중에 조건에 해당 되는 경우, 알아서 덮을 것이기 때문에
이러한 방식이 더욱 효율적이다.
================================================================================
◆ 해설 2 ◆
알파벳이 처음 등장한 위치를 기록 하는 것이기 때문에,
예시로 특정 알파벳이 중복으로 등장할 경우에 값이 덮어질 것을 방지

(예시)
string c = 'abca' 라고 하면
[0 1 2] 출력하지 않고 [3 1 2] 로 출력 될 것
*/
