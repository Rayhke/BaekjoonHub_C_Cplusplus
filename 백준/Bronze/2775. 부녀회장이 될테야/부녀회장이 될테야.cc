#include <iostream>
using namespace std;

int main() {
	int a[15][15] = {}, b, c, d, e[100000] = {};
	cin >> b;
	for (int n = 0; n < 15; n++) { a[0][n] = n + 1; a[n][0] = 1; }	// 0층 값을 미리 1 ~ 14 집어 넣기
	for (int n = 1; n < 15; n++) {
		for (int m = 1; m < 15; m++) {				// 1층 ~ 14층까지 [n] 층에 [m] 호실의 인원 수는
			a[n][m] = a[n][m - 1] + a[n - 1][m];		// 자기 왼편 이웃의 인원 수 [a[n][m - 1]] + 자기 바로 아래 층 이웃의 인원 수 [a[n - 1][m]] 를
		}							// 더 하면, 현재 [n] 층의 [m] 호실의 거주 해야될 인원 수의 값이 담긴다.
	}
	for (int n = 0; n < b; n++) {
		cin >> c >> d;
		e[n] = a[c][d - 1];					// 그 후에, 위에 미리 담아뒀던 2차원 배열 (각 층의 호실 거주 인원 수) 값을
	}								// 맞는 배열 위치로 찾아서 넣어준 후에 마지막에 출력하면 된다.
	for (int n = 0; n < b; n++) { cout << e[n] << '\n'; }
	return 0;
}
/* ■ 설명 ■
쉽게 하기 위해서 2차원 배열을 사용 했으며,
배열에 미리 값을 담아두어
이후에 입력 받는 [c], [d] 값으로 배열 안의 원소 값을
검색할 때, 수월하게 추적하기 위해 사용했다.
====================================================
(예시)
행 - 층 수, 열 - 호실 
00층 - 1 2 3
01층 - 1 3 6
02층 - 1 4 10

1층 3호실에 필요한 거주 인원 수는
1층 2호실 + 0층 3호실 = 1층 3호실  // 3 + 3 = 6

2층 3호실에 필요한 거주 인원 수는
2층 2호실 + 1층 3호실 = 2층 3호실  // 4 + 6 = 10
*/
