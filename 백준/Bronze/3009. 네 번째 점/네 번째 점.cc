#include <iostream>
using namespace std;

int main() {
	int a[3], b[3], c, d, e = 0, f = 0, g = 0, h = 0;
	cin >> a[0] >> b[0]; c = a[0]; d = b[0];
	for (int n = 1; n < 3; n++) {
		cin >> a[n] >> b[n];
		if (a[n] != c) { e = n; g++; }		// x축 처음 입력된 값이 다를 때 마다 [g] += 1, 배열 위치 기억
		if (b[n] != d) { f = n; h++; }		// y축 처음 입력된 값이 다를 때 마다 [h] += 1, 배열 위치 기억
	}
	if (g == 2) { cout << a[0] << " "; }
	else { cout << a[e] << " "; }
	if (h == 2) { cout << b[0]; }
	else { cout << b[f]; }
	return 0;
}
/* ■ 설명 ■
좌표의 축에 평행한 직사각형을 만드려면,
최소한 x축이 같은 값이 2쌍, y축도 같은 값이 2쌍 씩 있어야 한다.
(예시 : 10 10 20 20 / 40 40 50 50) 이런 식으로,

마지막으로 x축 [c] 와 y축 [d] 의 값이 다를 때 마다 체크한 값인 [g], [h] 가
' 2 ' 가 나온다면, [c] [d] 를 출력하면 되고,

각각 x축, y축 중복이 몇 번 나왔는 가, 상황에 따라선
값이 다를 때 마다 체크해둔 배열 위치 값을 이용해서 출력한다.
*/
