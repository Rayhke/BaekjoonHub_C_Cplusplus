#include <iostream>
using namespace std;

int main() {
	int a, b, c = 0, d[10000] = {};
	string s;
	cin >> a;
	for (int n = 0; n < a; n++) {
		cin >> s;
		if (s == "push") {					// push(푸쉬)
			cin >> b;					// 스택의 맨 위에 탑을 쌓듯이, 메모리 공간 안에 값을 담아서 쌓는다. 
			if (d[c] != 0) {				// 만약 현재 탑(층) 위치(메모리 공간)에 이미 값이 존재 한다면,
				c = c + 1;				// 새로운 층을 쌓아서, 값을 담는다.
				d[c] = b;
			}
			else { d[c] = b; }				// 스택의 맨 아래층 부터 비어 있다면, 바로 1층(바닥)으로 즉시 자리 잡아주는 용도이다.
		}
		else if (s == "pop") {					// pop(팝)
			if (d[c] != 0) {				// 스택 맨 위에 담긴 정수를 출력한 후, 값이 담겨 있었던 메모리 공간과 함께 버림.
				cout << d[c] << '\n'; d[c] = 0;		// ● 위의 조건을 시행한 후에, ●						↙[즉, 배열 자릿값이 0번일 경우]
				if (c > 0) { c = c - 1; }		// 출력한 값이 스택 전체에 유일하게 값이 담긴 메모리 공간이 었다면, 메모리 공간은 두고 값만 버리도록 한다. 
			}						// ● 위의 조건이 성립하지 않으면서, ●
			else { cout << -1 << '\n'; }			// 만약 스택 전체에 값이 담긴 메모리 공간이 하나도 존재하지 않다면, ' -1 ' 을 출력한다. 
		}
		else if (s == "size") {					// size(사이즈)		↙[대표적으로 스택의 첫 번째 자리인 배열 [d[0]] 에 값이 담겨 있으면]
			if (d[0] != 0) { cout << c + 1 << '\n'; }	// 스택 전체에 존재하는 값이 담겨있는, 메모리 공간의 갯수를 출력한다.
			else { cout << c << '\n'; }			// 만약, 값이 담겨있는 공간이 하나도 없다면 알아서 ' 0 ' 을 출력하도록 한다.
		}
		else if (s == "empty") {				// empty(엠프티)	←[스택이 비어있는 가, 없는 가 체크하는 작업]
			if (d[c] == 0) { cout << 1 << '\n'; }		// 스택 전체가 텅텅 비어 있다면 ' 1 ' 을 출력하고,
			else { cout << 0 << '\n'; }			// 스택 안에 하나라도 존재할 시에 ' 0 ' 을 출력한다.
		}
		else if (s == "top") {					// top(탑)
			if (d[c] != 0) { cout << d[c] << '\n'; }	// 스택의 맨 위에 있는 메모리 공간에 담긴 값을 출력한다.
			else { cout << -1 << '\n'; }			// 만약 스택의 맨 위에 있는 메모리 공간에 담겨있는 값이 없다면, 
		}							// (또는, 스택이 비어 있다면,) ' -1 ' 을 출력한다.
		s = "";
	}
	return 0;
}
